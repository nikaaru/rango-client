name: Conventional Commits Check
on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]

jobs:
  check:
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: https//google.com
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Checking Conventional Commits
        run: node ./scripts/check-conventional-commits/command.mjs
        env:
          REF: ${{ github.ref }}

      - name: Preview Deployment
        run: yarn run deploy | tee deploy.log
        env:
          REF: ${{ github.ref }}
          GH_TOKEN: ${{ github.token }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_WIDGET_CONFIG: ${{ secrets.VERCEL_PROJECT_WIDGET_CONFIG }}
          VERCEL_PROJECT_WIDGET_APP: ${{ secrets.VERCEL_PROJECT_WIDGET_APP }}
          # VERCEL_PROJECT_WALLETS: ${{ secrets.VERCEL_PROJECT_WALLETS }}
          # VERCEL_PROJECT_Q: ${{ secrets.VERCEL_PROJECT_Q }}
          # VERCEL_PROJECT_WALLET_ADAPTER: ${{ secrets.VERCEL_PROJECT_WALLET_ADAPTER }}

          # TODO add gitub repo and owner and other to env

      - name: Extract Preview URLs
        run: |
          app_url=$(grep '@nikaru-dev/widget-app-url-preview' deploy.log | awk -F ': ' '{print $2}')
          playground_url=$(grep '@nikaru-dev/widget-playground-url-preview' deploy.log | awk -F ': ' '{print $2}')
          echo "app_url=$app_url" >> $GITHUB_ENV
          echo "playground_url=$playground_url" >> $GITHUB_ENV

      - name: Add Comment to PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const appUrl = process.env.app_url;
            const playgroundUrl = process.env.playground_url;
            const commentBody = `App Preview URL: ${appUrl}\nPlayground Preview URL: ${playgroundUrl}`;

            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
              console.log("Comment added successfully.");
            } catch (error) {
              console.error("Error adding comment:", error);
              process.exit(1);
            }
